# This workflow will do a clean installation of node dependencies, cache/restore them,
# build the source code and builds a docker image and pushes it to Amazon ECR

name: CI - Run scans, tests, build & push docker image to Amazon ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - name: Docker lint check
        run: echo "Checking docker lint"

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: build-${{ github.run_number }}
        run: |
          echo 'REGISTRY >>>'$REGISTRY
          echo 'REPOSITORY >>>'$REPOSITORY
          echo 'Final stage >>>'$REGISTRY/$REPOSITORY:$IMAGE_TAG
          export IMAGE_NAME=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker-compose build --no-cache
          docker images
          # docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push 303522029614.dkr.ecr.ap-south-1.amazonaws.com/demo-node-app:build-6